{"ast":null,"code":"import { setCallStateInitiate, setLocalStreamInitiate } from \"../../Redux/Action/ActionCall\";\nimport { preOfferAnswers, defaultConstrains, configuration, callStates } from \"../ShareData\";\nimport store from \"../../Redux/Store\";\nlet connectedUserSocketId;\nlet peerConnection;\nlet dataChannel; //Get Camera\n\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains).then(stream => {\n    store.dispatch(setLocalStreamInitiate(stream));\n    store.dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE)); // createPeerConnection();\n  }).catch(err => {\n    console.log(\"error occured when trying to get an access to get local stream\");\n    console.log(err);\n  });\n}; // export const callToOtherUser = (calleeDetails) => {\n//   connectedUserSocketId = calleeDetails.socketId;\n//   store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n//   store.dispatch(setCallingDialogVisible(true));\n//   wss.sendPreOffer({\n//     callee: calleeDetails,\n//     caller: {\n//       username: store.getState().dashboard.username,\n//     },\n//   });\n// };","map":{"version":3,"names":["setCallStateInitiate","setLocalStreamInitiate","preOfferAnswers","defaultConstrains","configuration","callStates","store","connectedUserSocketId","peerConnection","dataChannel","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","CALL_AVAILABLE","catch","err","console","log"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Utils/WebRTCHandler/WebRTCHandler.js"],"sourcesContent":["import {\r\n  setCallStateInitiate,\r\n  setLocalStreamInitiate,\r\n} from \"../../Redux/Action/ActionCall\";\r\nimport {\r\n  preOfferAnswers,\r\n  defaultConstrains,\r\n  configuration,\r\n  callStates,\r\n} from \"../ShareData\";\r\nimport store from \"../../Redux/Store\";\r\n\r\nlet connectedUserSocketId;\r\nlet peerConnection;\r\nlet dataChannel;\r\n//Get Camera\r\nexport const getLocalStream = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia(defaultConstrains)\r\n    .then((stream) => {\r\n      store.dispatch(setLocalStreamInitiate(stream));\r\n      store.dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE));\r\n      // createPeerConnection();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\r\n        \"error occured when trying to get an access to get local stream\"\r\n      );\r\n      console.log(err);\r\n    });\r\n};\r\n// export const callToOtherUser = (calleeDetails) => {\r\n//   connectedUserSocketId = calleeDetails.socketId;\r\n//   store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\r\n//   store.dispatch(setCallingDialogVisible(true));\r\n//   wss.sendPreOffer({\r\n//     callee: calleeDetails,\r\n//     caller: {\r\n//       username: store.getState().dashboard.username,\r\n//     },\r\n//   });\r\n// };\r\n"],"mappings":"AAAA,SACEA,oBADF,EAEEC,sBAFF,QAGO,+BAHP;AAIA,SACEC,eADF,EAEEC,iBAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,cALP;AAMA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,IAAIC,qBAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,WAAJ,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClCC,SAAS,CAACC,YAAV,CACGC,YADH,CACgBV,iBADhB,EAEGW,IAFH,CAESC,MAAD,IAAY;IAChBT,KAAK,CAACU,QAAN,CAAef,sBAAsB,CAACc,MAAD,CAArC;IACAT,KAAK,CAACU,QAAN,CAAehB,oBAAoB,CAACK,UAAU,CAACY,cAAZ,CAAnC,EAFgB,CAGhB;EACD,CANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;IACdC,OAAO,CAACC,GAAR,CACE,gEADF;IAGAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAZH;AAaD,CAdM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}