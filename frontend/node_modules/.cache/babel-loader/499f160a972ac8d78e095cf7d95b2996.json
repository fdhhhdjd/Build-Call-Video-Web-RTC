{"ast":null,"code":"import socketClient from \"socket.io-client\";\nimport { setActiveUserInitiate } from \"../../Redux/Action/ActionMain\";\nimport store from \"../../Redux/Store\";\nimport * as webRTCHandler from \"../WebRTCHandler/WebRTCHandler\";\nimport { broadcastEventTypes } from \"../../Utils/ShareData\";\nconst SERVER = \"http://localhost:5001\";\nlet socket;\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n  socket.on(\"connection\", () => {\n    console.log(\"succesfully connected with wss server\");\n    console.log(socket.id);\n  });\n  socket.on(\"broadcast\", data => {\n    handleBroadcastEvents(data);\n  }); // listeners related with direct call\n\n  socket.on(\"pre-offer\", data => {\n    webRTCHandler.handlePreOffer(data);\n  });\n  socket.on(\"pre-offer-answer\", data => {\n    webRTCHandler.handlePreOfferAnswer(data);\n  });\n};\nexport const registerNewUser = username => {\n  socket.emit(\"register-new-user\", {\n    username: username,\n    socketId: socket.id\n  });\n}; // !emitting events to server related with direct call\n//?Accep Call\n\nexport const sendPreOfferAnswer = data => {\n  socket.emit(\"pre-offer-answer\", data);\n}; //?Call\n\nexport const sendPreOffer = data => {\n  console.log(data, \"------asdasdasd\");\n  socket.emit(\"pre-offer\", data);\n};\nexport const sendUserHangedUp = data => {\n  socket.emit(\"user-hanged-up\", data);\n};\nexport const sendWebRTCOffer = data => {\n  socket.emit(\"webRTC-offer\", data);\n};\nexport const sendWebRTCAnswer = data => {\n  socket.emit(\"webRTC-answer\", data);\n};\nexport const sendWebRTCCandidate = data => {\n  socket.emit(\"webRTC-candidate\", data);\n};\n\nconst handleBroadcastEvents = data => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      store.dispatch(setActiveUserInitiate(activeUsers));\n      break;\n\n    case broadcastEventTypes.GROUP_CALL_ROOMS:\n      const groupCallRooms = data.groupCallRooms.filter(room => room.socketId !== socket.id);\n      const activeGroupCallRoomId = \"\"; //\n      //   webRTCGroupCallHandler.checkActiveGroupCall();\n\n      if (activeGroupCallRoomId) {\n        const room = groupCallRooms.find(room => room.roomId === activeGroupCallRoomId);\n\n        if (!room) {\n          // webRTCGroupCallHandler.clearGroupData();\n          console.log(\"33333\");\n        }\n      } // store.dispatch(dashboardActions.setGroupCalls(groupCallRooms));\n\n\n      break;\n\n    default:\n      break;\n  }\n};","map":{"version":3,"names":["socketClient","setActiveUserInitiate","store","webRTCHandler","broadcastEventTypes","SERVER","socket","connectWithWebSocket","on","console","log","id","data","handleBroadcastEvents","handlePreOffer","handlePreOfferAnswer","registerNewUser","username","emit","socketId","sendPreOfferAnswer","sendPreOffer","sendUserHangedUp","sendWebRTCOffer","sendWebRTCAnswer","sendWebRTCCandidate","event","ACTIVE_USERS","activeUsers","filter","activeUser","dispatch","GROUP_CALL_ROOMS","groupCallRooms","room","activeGroupCallRoomId","find","roomId"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Utils/Connect-Soket/wssConnection.js"],"sourcesContent":["import socketClient from \"socket.io-client\";\r\nimport { setActiveUserInitiate } from \"../../Redux/Action/ActionMain\";\r\nimport store from \"../../Redux/Store\";\r\nimport * as webRTCHandler from \"../WebRTCHandler/WebRTCHandler\";\r\nimport { broadcastEventTypes } from \"../../Utils/ShareData\";\r\nconst SERVER = \"http://localhost:5001\";\r\n\r\nlet socket;\r\n\r\nexport const connectWithWebSocket = () => {\r\n  socket = socketClient(SERVER);\r\n\r\n  socket.on(\"connection\", () => {\r\n    console.log(\"succesfully connected with wss server\");\r\n    console.log(socket.id);\r\n  });\r\n  socket.on(\"broadcast\", (data) => {\r\n    handleBroadcastEvents(data);\r\n  });\r\n  // listeners related with direct call\r\n  socket.on(\"pre-offer\", (data) => {\r\n    webRTCHandler.handlePreOffer(data);\r\n  });\r\n  socket.on(\"pre-offer-answer\", (data) => {\r\n    webRTCHandler.handlePreOfferAnswer(data);\r\n  });\r\n};\r\nexport const registerNewUser = (username) => {\r\n  socket.emit(\"register-new-user\", {\r\n    username: username,\r\n    socketId: socket.id,\r\n  });\r\n};\r\n// !emitting events to server related with direct call\r\n//?Accep Call\r\nexport const sendPreOfferAnswer = (data) => {\r\n  socket.emit(\"pre-offer-answer\", data);\r\n};\r\n//?Call\r\nexport const sendPreOffer = (data) => {\r\n  console.log(data, \"------asdasdasd\");\r\n  socket.emit(\"pre-offer\", data);\r\n};\r\nexport const sendUserHangedUp = (data) => {\r\n  socket.emit(\"user-hanged-up\", data);\r\n};\r\nexport const sendWebRTCOffer = (data) => {\r\n  socket.emit(\"webRTC-offer\", data);\r\n};\r\nexport const sendWebRTCAnswer = (data) => {\r\n  socket.emit(\"webRTC-answer\", data);\r\n};\r\nexport const sendWebRTCCandidate = (data) => {\r\n  socket.emit(\"webRTC-candidate\", data);\r\n};\r\nconst handleBroadcastEvents = (data) => {\r\n  switch (data.event) {\r\n    case broadcastEventTypes.ACTIVE_USERS:\r\n      const activeUsers = data.activeUsers.filter(\r\n        (activeUser) => activeUser.socketId !== socket.id\r\n      );\r\n\r\n      store.dispatch(setActiveUserInitiate(activeUsers));\r\n\r\n      break;\r\n    case broadcastEventTypes.GROUP_CALL_ROOMS:\r\n      const groupCallRooms = data.groupCallRooms.filter(\r\n        (room) => room.socketId !== socket.id\r\n      );\r\n      const activeGroupCallRoomId = \"\";\r\n      //\r\n      //   webRTCGroupCallHandler.checkActiveGroupCall();\r\n\r\n      if (activeGroupCallRoomId) {\r\n        const room = groupCallRooms.find(\r\n          (room) => room.roomId === activeGroupCallRoomId\r\n        );\r\n        if (!room) {\r\n          // webRTCGroupCallHandler.clearGroupData();\r\n          console.log(\"33333\");\r\n        }\r\n      }\r\n      // store.dispatch(dashboardActions.setGroupCalls(groupCallRooms));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}