{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { setCallStateInitiate, setLocalStreamInitiate } from \"../../Redux/Action/ActionCall\";\nimport { preOfferAnswers, // defaultConstrains,\nconfiguration, callStates } from \"../ShareData\";\nconst defaultConstrains = {\n  video: {\n    width: 480,\n    height: 360\n  },\n  audio: true\n};\nlet connectedUserSocketId;\nlet peerConnection;\nlet dataChannel;\nexport const getLocalStream = () => {\n  var _s = $RefreshSig$();\n\n  _s(navigator.mediaDevices.getUserMedia(defaultConstrains).then(_s(stream => {\n    _s();\n\n    const dispatch = useDispatch();\n    dispatch(setLocalStreamInitiate(stream));\n    dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE)); // createPeerConnection();\n  }, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n    return [useDispatch];\n  })), \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n    return [useDispatch];\n  }).catch(err => {\n    console.log(\"error occured when trying to get an access to get local stream\");\n    console.log(err);\n  });\n};","map":{"version":3,"names":["useDispatch","setCallStateInitiate","setLocalStreamInitiate","preOfferAnswers","configuration","callStates","defaultConstrains","video","width","height","audio","connectedUserSocketId","peerConnection","dataChannel","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","CALL_AVAILABLE","catch","err","console","log"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Utils/WebRTCHandler/WebRTCHandler.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport {\r\n  setCallStateInitiate,\r\n  setLocalStreamInitiate,\r\n} from \"../../Redux/Action/ActionCall\";\r\nimport {\r\n  preOfferAnswers,\r\n  // defaultConstrains,\r\n  configuration,\r\n  callStates,\r\n} from \"../ShareData\";\r\nconst defaultConstrains = {\r\n  video: {\r\n    width: 480,\r\n    height: 360,\r\n  },\r\n  audio: true,\r\n};\r\nlet connectedUserSocketId;\r\nlet peerConnection;\r\nlet dataChannel;\r\n\r\nexport const getLocalStream = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia(defaultConstrains)\r\n    .then((stream) => {\r\n      const dispatch = useDispatch();\r\n      dispatch(setLocalStreamInitiate(stream));\r\n      dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE));\r\n      // createPeerConnection();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\r\n        \"error occured when trying to get an access to get local stream\"\r\n      );\r\n      console.log(err);\r\n    });\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SACEC,oBADF,EAEEC,sBAFF,QAGO,+BAHP;AAIA,SACEC,eADF,EAEE;AACAC,aAHF,EAIEC,UAJF,QAKO,cALP;AAMA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE;IACLC,KAAK,EAAE,GADF;IAELC,MAAM,EAAE;EAFH,CADiB;EAKxBC,KAAK,EAAE;AALiB,CAA1B;AAOA,IAAIC,qBAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,WAAJ;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAClC,GAAAC,SAAS,CAACC,YAAV,CACGC,YADH,CACgBX,iBADhB,EAEGY,IAFH,IAESC,MAAD,IAAY;IAAA;;IAChB,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;IACAoB,QAAQ,CAAClB,sBAAsB,CAACiB,MAAD,CAAvB,CAAR;IACAC,QAAQ,CAACnB,oBAAoB,CAACI,UAAU,CAACgB,cAAZ,CAArB,CAAR,CAHgB,CAIhB;EACD,CAPH;IAAA,QAGqBrB,WAHrB;EAAA;IAAA,QAGqBA,WAHrB;EAAA,GAQGsB,KARH,CAQUC,GAAD,IAAS;IACdC,OAAO,CAACC,GAAR,CACE,gEADF;IAGAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAbH;AAcD,CAfM"},"metadata":{},"sourceType":"module"}