{"ast":null,"code":"import * as types from \"../ActionTypes\"; //?SetUserName\n\nexport const setUsernameStart = () => ({\n  type: types.DASHBOARD_SET_USERNAME_START\n});\nexport const setUsernameSuccess = apis => ({\n  type: types.DASHBOARD_SET_USERNAME_SUCCESS,\n  payload: apis\n});\nexport const setUsernameFail = error => ({\n  type: types.DASHBOARD_SET_USERNAME_FAIL,\n  payload: error\n}); //?SetActiveUser\n\nexport const setActiveUserStart = () => ({\n  type: types.DASHBOARD_SET_ACTIVE_USERS_START\n});\nexport const setActiveUserSuccess = apis => ({\n  type: types.DASHBOARD_SET_ACTIVE_USERS_SUCCESS,\n  payload: apis\n});\nexport const setActiveUserFail = error => ({\n  type: types.DASHBOARD_SET_ACTIVE_USERS_FAIL,\n  payload: error\n}); //?SetActiveUser\n\nexport const setGroupCallRoomStart = () => ({\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_START\n});\nexport const setGroupCallRoomSuccess = apis => ({\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_SUCCESS,\n  payload: apis\n});\nexport const setGroupCallRoomFail = error => ({\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_FAIL,\n  payload: error\n}); //! SetUserName\n\nexport const setUsernameInitiate = username => async dispatch => {\n  try {\n    dispatch(setUsernameStart());\n    dispatch(setUsernameSuccess(username));\n  } catch (error) {\n    dispatch(setUsernameFail(error));\n  }\n}; //! SetUserName\n\nexport const setActiveUserInitiate = username => async dispatch => {\n  try {\n    dispatch(setActiveUserStart());\n    dispatch(setActiveUserSuccess(username));\n  } catch (error) {\n    dispatch(setActiveUserFail(error));\n  }\n}; //!CLEAR_ERRORS\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: types.CLEAR_ERRORS_SUCCESS\n  });\n};","map":{"version":3,"names":["types","setUsernameStart","type","DASHBOARD_SET_USERNAME_START","setUsernameSuccess","apis","DASHBOARD_SET_USERNAME_SUCCESS","payload","setUsernameFail","error","DASHBOARD_SET_USERNAME_FAIL","setActiveUserStart","DASHBOARD_SET_ACTIVE_USERS_START","setActiveUserSuccess","DASHBOARD_SET_ACTIVE_USERS_SUCCESS","setActiveUserFail","DASHBOARD_SET_ACTIVE_USERS_FAIL","setGroupCallRoomStart","DASHBOARD_SET_GROUP_CALL_ROOMS_START","setGroupCallRoomSuccess","DASHBOARD_SET_GROUP_CALL_ROOMS_SUCCESS","setGroupCallRoomFail","DASHBOARD_SET_GROUP_CALL_ROOMS_FAIL","setUsernameInitiate","username","dispatch","setActiveUserInitiate","clearErrors","CLEAR_ERRORS_SUCCESS"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Redux/Action/ActionMain.js"],"sourcesContent":["import * as types from \"../ActionTypes\";\r\n//?SetUserName\r\nexport const setUsernameStart = () => ({\r\n  type: types.DASHBOARD_SET_USERNAME_START,\r\n});\r\nexport const setUsernameSuccess = (apis) => ({\r\n  type: types.DASHBOARD_SET_USERNAME_SUCCESS,\r\n  payload: apis,\r\n});\r\nexport const setUsernameFail = (error) => ({\r\n  type: types.DASHBOARD_SET_USERNAME_FAIL,\r\n  payload: error,\r\n});\r\n//?SetActiveUser\r\nexport const setActiveUserStart = () => ({\r\n  type: types.DASHBOARD_SET_ACTIVE_USERS_START,\r\n});\r\nexport const setActiveUserSuccess = (apis) => ({\r\n  type: types.DASHBOARD_SET_ACTIVE_USERS_SUCCESS,\r\n  payload: apis,\r\n});\r\nexport const setActiveUserFail = (error) => ({\r\n  type: types.DASHBOARD_SET_ACTIVE_USERS_FAIL,\r\n  payload: error,\r\n});\r\n//?SetActiveUser\r\nexport const setGroupCallRoomStart = () => ({\r\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_START,\r\n});\r\n\r\nexport const setGroupCallRoomSuccess = (apis) => ({\r\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_SUCCESS,\r\n  payload: apis,\r\n});\r\nexport const setGroupCallRoomFail = (error) => ({\r\n  type: types.DASHBOARD_SET_GROUP_CALL_ROOMS_FAIL,\r\n  payload: error,\r\n});\r\n//! SetUserName\r\nexport const setUsernameInitiate = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch(setUsernameStart());\r\n\r\n    dispatch(setUsernameSuccess(username));\r\n  } catch (error) {\r\n    dispatch(setUsernameFail(error));\r\n  }\r\n};\r\n//! SetUserName\r\nexport const setActiveUserInitiate = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch(setActiveUserStart());\r\n\r\n    dispatch(setActiveUserSuccess(username));\r\n  } catch (error) {\r\n    dispatch(setActiveUserFail(error));\r\n  }\r\n};\r\n\r\n//!CLEAR_ERRORS\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: types.CLEAR_ERRORS_SUCCESS });\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB,C,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;EACrCC,IAAI,EAAEF,KAAK,CAACG;AADyB,CAAP,CAAzB;AAGP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,KAAW;EAC3CH,IAAI,EAAEF,KAAK,CAACM,8BAD+B;EAE3CC,OAAO,EAAEF;AAFkC,CAAX,CAA3B;AAIP,OAAO,MAAMG,eAAe,GAAIC,KAAD,KAAY;EACzCP,IAAI,EAAEF,KAAK,CAACU,2BAD6B;EAEzCH,OAAO,EAAEE;AAFgC,CAAZ,CAAxB,C,CAIP;;AACA,OAAO,MAAME,kBAAkB,GAAG,OAAO;EACvCT,IAAI,EAAEF,KAAK,CAACY;AAD2B,CAAP,CAA3B;AAGP,OAAO,MAAMC,oBAAoB,GAAIR,IAAD,KAAW;EAC7CH,IAAI,EAAEF,KAAK,CAACc,kCADiC;EAE7CP,OAAO,EAAEF;AAFoC,CAAX,CAA7B;AAIP,OAAO,MAAMU,iBAAiB,GAAIN,KAAD,KAAY;EAC3CP,IAAI,EAAEF,KAAK,CAACgB,+BAD+B;EAE3CT,OAAO,EAAEE;AAFkC,CAAZ,CAA1B,C,CAIP;;AACA,OAAO,MAAMQ,qBAAqB,GAAG,OAAO;EAC1Cf,IAAI,EAAEF,KAAK,CAACkB;AAD8B,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAId,IAAD,KAAW;EAChDH,IAAI,EAAEF,KAAK,CAACoB,sCADoC;EAEhDb,OAAO,EAAEF;AAFuC,CAAX,CAAhC;AAIP,OAAO,MAAMgB,oBAAoB,GAAIZ,KAAD,KAAY;EAC9CP,IAAI,EAAEF,KAAK,CAACsB,mCADkC;EAE9Cf,OAAO,EAAEE;AAFqC,CAAZ,CAA7B,C,CAIP;;AACA,OAAO,MAAMc,mBAAmB,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;EACnE,IAAI;IACFA,QAAQ,CAACxB,gBAAgB,EAAjB,CAAR;IAEAwB,QAAQ,CAACrB,kBAAkB,CAACoB,QAAD,CAAnB,CAAR;EACD,CAJD,CAIE,OAAOf,KAAP,EAAc;IACdgB,QAAQ,CAACjB,eAAe,CAACC,KAAD,CAAhB,CAAR;EACD;AACF,CARM,C,CASP;;AACA,OAAO,MAAMiB,qBAAqB,GAAIF,QAAD,IAAc,MAAOC,QAAP,IAAoB;EACrE,IAAI;IACFA,QAAQ,CAACd,kBAAkB,EAAnB,CAAR;IAEAc,QAAQ,CAACZ,oBAAoB,CAACW,QAAD,CAArB,CAAR;EACD,CAJD,CAIE,OAAOf,KAAP,EAAc;IACdgB,QAAQ,CAACV,iBAAiB,CAACN,KAAD,CAAlB,CAAR;EACD;AACF,CARM,C,CAUP;;AACA,OAAO,MAAMkB,WAAW,GAAG,MAAM,MAAOF,QAAP,IAAoB;EACnDA,QAAQ,CAAC;IAAEvB,IAAI,EAAEF,KAAK,CAAC4B;EAAd,CAAD,CAAR;AACD,CAFM"},"metadata":{},"sourceType":"module"}