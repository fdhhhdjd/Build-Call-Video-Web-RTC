{"ast":null,"code":"import { setCallerUsernameInitiate, setCallStateInitiate, setLocalStreamInitiate } from \"../../Redux/Action/ActionCall\";\nimport { preOfferAnswers, defaultConstrains, configuration, callStates } from \"../ShareData\";\nimport store from \"../../Redux/Store\";\nimport * as wss from \"../Connect-Soket/wssConnection\";\nlet connectedUserSocketId;\nlet peerConnection;\nlet dataChannel; //Get Camera\n\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains).then(stream => {\n    store.dispatch(setLocalStreamInitiate(stream));\n    store.dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE)); // createPeerConnection();\n  }).catch(err => {\n    console.log(\"error occured when trying to get an access to get local stream\");\n    console.log(err);\n  });\n}; //Call\n\nexport const handlePreOffer = data => {\n  if (checkIfCallIsPossible()) {\n    connectedUserSocketId = data.callerSocketId;\n    store.dispatch(setCallerUsernameInitiate(data.callerUsername));\n    store.dispatch(setCallStateInitiate(callStates.CALL_REQUESTED));\n  } else {\n    wss.sendPreOfferAnswer({\n      callerSocketId: data.callerSocketId,\n      answer: preOfferAnswers.CALL_NOT_AVAILABLE\n    });\n  }\n}; //accept call\n\nexport const acceptIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_ACCEPTED\n  });\n  store.dispatch(setCallStateInitiate(callStates.CALL_IN_PROGRESS));\n}; //reject call\n\nexport const rejectIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_REJECTED\n  });\n  resetCallData();\n};\nexport const callToOtherUser = calleeDetails => {\n  connectedUserSocketId = calleeDetails.socketId;\n  store.dispatch(setCallerUsernameInitiate(callStates.CALL_IN_PROGRESS)); // store.dispatch(setCallingDialogVisible(true));\n  // wss.sendPreOffer({\n  //   callee: calleeDetails,\n  //   caller: {\n  //     username: store.getState().dashboard.username,\n  //   },\n  // });\n};\nexport const checkIfCallIsPossible = () => {\n  if (store.getState().call.localStream === null || store.getState().call.callState !== callStates.CALL_AVAILABLE) {\n    return false;\n  } else {\n    return true;\n  }\n}; //Function Reject\n\nexport const resetCallData = () => {\n  connectedUserSocketId = null;\n  store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n};","map":{"version":3,"names":["setCallerUsernameInitiate","setCallStateInitiate","setLocalStreamInitiate","preOfferAnswers","defaultConstrains","configuration","callStates","store","wss","connectedUserSocketId","peerConnection","dataChannel","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","CALL_AVAILABLE","catch","err","console","log","handlePreOffer","data","checkIfCallIsPossible","callerSocketId","callerUsername","CALL_REQUESTED","sendPreOfferAnswer","answer","CALL_NOT_AVAILABLE","acceptIncomingCallRequest","CALL_ACCEPTED","CALL_IN_PROGRESS","rejectIncomingCallRequest","CALL_REJECTED","resetCallData","callToOtherUser","calleeDetails","socketId","getState","call","localStream","callState","setCallState"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Utils/WebRTCHandler/WebRTCHandler.js"],"sourcesContent":["import {\r\n  setCallerUsernameInitiate,\r\n  setCallStateInitiate,\r\n  setLocalStreamInitiate,\r\n} from \"../../Redux/Action/ActionCall\";\r\nimport {\r\n  preOfferAnswers,\r\n  defaultConstrains,\r\n  configuration,\r\n  callStates,\r\n} from \"../ShareData\";\r\nimport store from \"../../Redux/Store\";\r\nimport * as wss from \"../Connect-Soket/wssConnection\";\r\nlet connectedUserSocketId;\r\nlet peerConnection;\r\nlet dataChannel;\r\n//Get Camera\r\nexport const getLocalStream = () => {\r\n  navigator.mediaDevices\r\n    .getUserMedia(defaultConstrains)\r\n    .then((stream) => {\r\n      store.dispatch(setLocalStreamInitiate(stream));\r\n      store.dispatch(setCallStateInitiate(callStates.CALL_AVAILABLE));\r\n      // createPeerConnection();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\r\n        \"error occured when trying to get an access to get local stream\"\r\n      );\r\n      console.log(err);\r\n    });\r\n};\r\n//Call\r\nexport const handlePreOffer = (data) => {\r\n  if (checkIfCallIsPossible()) {\r\n    connectedUserSocketId = data.callerSocketId;\r\n    store.dispatch(setCallerUsernameInitiate(data.callerUsername));\r\n    store.dispatch(setCallStateInitiate(callStates.CALL_REQUESTED));\r\n  } else {\r\n    wss.sendPreOfferAnswer({\r\n      callerSocketId: data.callerSocketId,\r\n      answer: preOfferAnswers.CALL_NOT_AVAILABLE,\r\n    });\r\n  }\r\n};\r\n//accept call\r\nexport const acceptIncomingCallRequest = () => {\r\n  wss.sendPreOfferAnswer({\r\n    callerSocketId: connectedUserSocketId,\r\n    answer: preOfferAnswers.CALL_ACCEPTED,\r\n  });\r\n\r\n  store.dispatch(setCallStateInitiate(callStates.CALL_IN_PROGRESS));\r\n};\r\n//reject call\r\nexport const rejectIncomingCallRequest = () => {\r\n  wss.sendPreOfferAnswer({\r\n    callerSocketId: connectedUserSocketId,\r\n    answer: preOfferAnswers.CALL_REJECTED,\r\n  });\r\n  resetCallData();\r\n};\r\nexport const callToOtherUser = (calleeDetails) => {\r\n  connectedUserSocketId = calleeDetails.socketId;\r\n  store.dispatch(setCallerUsernameInitiate(callStates.CALL_IN_PROGRESS));\r\n  // store.dispatch(setCallingDialogVisible(true));\r\n  // wss.sendPreOffer({\r\n  //   callee: calleeDetails,\r\n  //   caller: {\r\n  //     username: store.getState().dashboard.username,\r\n  //   },\r\n  // });\r\n};\r\nexport const checkIfCallIsPossible = () => {\r\n  if (\r\n    store.getState().call.localStream === null ||\r\n    store.getState().call.callState !== callStates.CALL_AVAILABLE\r\n  ) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n//Function Reject\r\nexport const resetCallData = () => {\r\n  connectedUserSocketId = null;\r\n  store.dispatch(setCallState(callStates.CALL_AVAILABLE));\r\n};\r\n"],"mappings":"AAAA,SACEA,yBADF,EAEEC,oBAFF,EAGEC,sBAHF,QAIO,+BAJP;AAKA,SACEC,eADF,EAEEC,iBAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,cALP;AAMA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,gCAArB;AACA,IAAIC,qBAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,WAAJ,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClCC,SAAS,CAACC,YAAV,CACGC,YADH,CACgBX,iBADhB,EAEGY,IAFH,CAESC,MAAD,IAAY;IAChBV,KAAK,CAACW,QAAN,CAAehB,sBAAsB,CAACe,MAAD,CAArC;IACAV,KAAK,CAACW,QAAN,CAAejB,oBAAoB,CAACK,UAAU,CAACa,cAAZ,CAAnC,EAFgB,CAGhB;EACD,CANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;IACdC,OAAO,CAACC,GAAR,CACE,gEADF;IAGAD,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAZH;AAaD,CAdM,C,CAeP;;AACA,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAU;EACtC,IAAIC,qBAAqB,EAAzB,EAA6B;IAC3BjB,qBAAqB,GAAGgB,IAAI,CAACE,cAA7B;IACApB,KAAK,CAACW,QAAN,CAAelB,yBAAyB,CAACyB,IAAI,CAACG,cAAN,CAAxC;IACArB,KAAK,CAACW,QAAN,CAAejB,oBAAoB,CAACK,UAAU,CAACuB,cAAZ,CAAnC;EACD,CAJD,MAIO;IACLrB,GAAG,CAACsB,kBAAJ,CAAuB;MACrBH,cAAc,EAAEF,IAAI,CAACE,cADA;MAErBI,MAAM,EAAE5B,eAAe,CAAC6B;IAFH,CAAvB;EAID;AACF,CAXM,C,CAYP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,MAAM;EAC7CzB,GAAG,CAACsB,kBAAJ,CAAuB;IACrBH,cAAc,EAAElB,qBADK;IAErBsB,MAAM,EAAE5B,eAAe,CAAC+B;EAFH,CAAvB;EAKA3B,KAAK,CAACW,QAAN,CAAejB,oBAAoB,CAACK,UAAU,CAAC6B,gBAAZ,CAAnC;AACD,CAPM,C,CAQP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,MAAM;EAC7C5B,GAAG,CAACsB,kBAAJ,CAAuB;IACrBH,cAAc,EAAElB,qBADK;IAErBsB,MAAM,EAAE5B,eAAe,CAACkC;EAFH,CAAvB;EAIAC,aAAa;AACd,CANM;AAOP,OAAO,MAAMC,eAAe,GAAIC,aAAD,IAAmB;EAChD/B,qBAAqB,GAAG+B,aAAa,CAACC,QAAtC;EACAlC,KAAK,CAACW,QAAN,CAAelB,yBAAyB,CAACM,UAAU,CAAC6B,gBAAZ,CAAxC,EAFgD,CAGhD;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAVM;AAWP,OAAO,MAAMT,qBAAqB,GAAG,MAAM;EACzC,IACEnB,KAAK,CAACmC,QAAN,GAAiBC,IAAjB,CAAsBC,WAAtB,KAAsC,IAAtC,IACArC,KAAK,CAACmC,QAAN,GAAiBC,IAAjB,CAAsBE,SAAtB,KAAoCvC,UAAU,CAACa,cAFjD,EAGE;IACA,OAAO,KAAP;EACD,CALD,MAKO;IACL,OAAO,IAAP;EACD;AACF,CATM,C,CAUP;;AACA,OAAO,MAAMmB,aAAa,GAAG,MAAM;EACjC7B,qBAAqB,GAAG,IAAxB;EACAF,KAAK,CAACW,QAAN,CAAe4B,YAAY,CAACxC,UAAU,CAACa,cAAZ,CAA3B;AACD,CAHM"},"metadata":{},"sourceType":"module"}