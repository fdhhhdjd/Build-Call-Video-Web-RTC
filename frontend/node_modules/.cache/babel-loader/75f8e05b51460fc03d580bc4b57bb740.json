{"ast":null,"code":"import * as types from \"../ActionTypes\";\nimport { callStates } from \"../../Utils/ShareData\";\nconst initialState = {\n  loading: false,\n  error: null,\n  localStream: null,\n  callState: callStates.CALL_UNAVAILABLE,\n  callingDialogVisible: false,\n  callerUsername: \"\",\n  callRejected: {\n    rejected: false,\n    reason: \"\"\n  },\n  remoteStream: null,\n  localCameraEnabled: true,\n  localMicrophoneEnabled: true,\n  screenSharingActive: false,\n  groupCallActive: false,\n  groupCallStreams: [],\n  message: {\n    received: false,\n    content: \"\"\n  }\n};\n\nconst CallReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.CALL_SET_LOCAL_STREAM_START:\n    case types.CALL_SET_CALL_STATE_START:\n    case types.CALL_SET_CALLER_USERNAME_START:\n      return { ...state,\n        loading: true\n      };\n\n    case types.CALL_SET_LOCAL_STREAM_SUCCESS:\n      return { ...state,\n        loading: false,\n        localStream: action.payload\n      };\n\n    case types.CALL_SET_CALL_STATE_SUCCESS:\n      return { ...state,\n        loading: false,\n        callState: action.payload\n      };\n\n    case types.CALL_SET_CALLER_USERNAME_SUCCESS:\n      return { ...state,\n        loading: false,\n        callerUsername: action.payload\n      };\n\n    case types.CLEAR_ERRORS_SUCCESS:\n      return { ...state\n      };\n\n    case types.CALL_SET_LOCAL_STREAM_FAIL:\n    case types.CALL_SET_CALL_STATE_FAIL:\n    case types.CALL_SET_CALLER_USERNAME_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = CallReducer;\nexport default CallReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallReducer\");","map":{"version":3,"names":["types","callStates","initialState","loading","error","localStream","callState","CALL_UNAVAILABLE","callingDialogVisible","callerUsername","callRejected","rejected","reason","remoteStream","localCameraEnabled","localMicrophoneEnabled","screenSharingActive","groupCallActive","groupCallStreams","message","received","content","CallReducer","state","action","type","CALL_SET_LOCAL_STREAM_START","CALL_SET_CALL_STATE_START","CALL_SET_CALLER_USERNAME_START","CALL_SET_LOCAL_STREAM_SUCCESS","payload","CALL_SET_CALL_STATE_SUCCESS","CALL_SET_CALLER_USERNAME_SUCCESS","CLEAR_ERRORS_SUCCESS","CALL_SET_LOCAL_STREAM_FAIL","CALL_SET_CALL_STATE_FAIL","CALL_SET_CALLER_USERNAME_FAIL"],"sources":["D:/Full-Stack-Developer/Call-Video-FullStack/frontend/src/Redux/Reducer/ReducerCall.js"],"sourcesContent":["import * as types from \"../ActionTypes\";\r\nimport { callStates } from \"../../Utils/ShareData\";\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  localStream: null,\r\n  callState: callStates.CALL_UNAVAILABLE,\r\n  callingDialogVisible: false,\r\n  callerUsername: \"\",\r\n  callRejected: {\r\n    rejected: false,\r\n    reason: \"\",\r\n  },\r\n  remoteStream: null,\r\n  localCameraEnabled: true,\r\n  localMicrophoneEnabled: true,\r\n  screenSharingActive: false,\r\n  groupCallActive: false,\r\n  groupCallStreams: [],\r\n  message: {\r\n    received: false,\r\n    content: \"\",\r\n  },\r\n};\r\nconst CallReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.CALL_SET_LOCAL_STREAM_START:\r\n    case types.CALL_SET_CALL_STATE_START:\r\n    case types.CALL_SET_CALLER_USERNAME_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.CALL_SET_LOCAL_STREAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        localStream: action.payload,\r\n      };\r\n    case types.CALL_SET_CALL_STATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        callState: action.payload,\r\n      };\r\n    case types.CALL_SET_CALLER_USERNAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        callerUsername: action.payload,\r\n      };\r\n    case types.CLEAR_ERRORS_SUCCESS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.CALL_SET_LOCAL_STREAM_FAIL:\r\n    case types.CALL_SET_CALL_STATE_FAIL:\r\n    case types.CALL_SET_CALLER_USERNAME_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default CallReducer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,KAAK,EAAE,IAFY;EAGnBC,WAAW,EAAE,IAHM;EAInBC,SAAS,EAAEL,UAAU,CAACM,gBAJH;EAKnBC,oBAAoB,EAAE,KALH;EAMnBC,cAAc,EAAE,EANG;EAOnBC,YAAY,EAAE;IACZC,QAAQ,EAAE,KADE;IAEZC,MAAM,EAAE;EAFI,CAPK;EAWnBC,YAAY,EAAE,IAXK;EAYnBC,kBAAkB,EAAE,IAZD;EAanBC,sBAAsB,EAAE,IAbL;EAcnBC,mBAAmB,EAAE,KAdF;EAenBC,eAAe,EAAE,KAfE;EAgBnBC,gBAAgB,EAAE,EAhBC;EAiBnBC,OAAO,EAAE;IACPC,QAAQ,EAAE,KADH;IAEPC,OAAO,EAAE;EAFF;AAjBU,CAArB;;AAsBA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBrB,YAAyB;EAAA,IAAXsB,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKzB,KAAK,CAAC0B,2BAAX;IACA,KAAK1B,KAAK,CAAC2B,yBAAX;IACA,KAAK3B,KAAK,CAAC4B,8BAAX;MACE,OAAO,EACL,GAAGL,KADE;QAELpB,OAAO,EAAE;MAFJ,CAAP;;IAIF,KAAKH,KAAK,CAAC6B,6BAAX;MACE,OAAO,EACL,GAAGN,KADE;QAELpB,OAAO,EAAE,KAFJ;QAGLE,WAAW,EAAEmB,MAAM,CAACM;MAHf,CAAP;;IAKF,KAAK9B,KAAK,CAAC+B,2BAAX;MACE,OAAO,EACL,GAAGR,KADE;QAELpB,OAAO,EAAE,KAFJ;QAGLG,SAAS,EAAEkB,MAAM,CAACM;MAHb,CAAP;;IAKF,KAAK9B,KAAK,CAACgC,gCAAX;MACE,OAAO,EACL,GAAGT,KADE;QAELpB,OAAO,EAAE,KAFJ;QAGLM,cAAc,EAAEe,MAAM,CAACM;MAHlB,CAAP;;IAKF,KAAK9B,KAAK,CAACiC,oBAAX;MACE,OAAO,EACL,GAAGV;MADE,CAAP;;IAGF,KAAKvB,KAAK,CAACkC,0BAAX;IACA,KAAKlC,KAAK,CAACmC,wBAAX;IACA,KAAKnC,KAAK,CAACoC,6BAAX;MACE,OAAO,EACL,GAAGb,KADE;QAELpB,OAAO,EAAE,KAFJ;QAGLC,KAAK,EAAEoB,MAAM,CAACM;MAHT,CAAP;;IAMF;MACE,OAAOP,KAAP;EAxCJ;AA0CD,CA3CD;;KAAMD,W;AA4CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}